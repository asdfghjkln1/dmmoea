Loading required package: nsga2R
Loading required package: mco

Attaching package: ‘mco’

The following object is masked _by_ ‘.GlobalEnv’:

    nsga2

Loading required package: cluster
Loading required package: factoextra
Loading required package: ggplot2
Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa
Loading required package: NbClust
Loading required package: infotheo
Loading required package: irace
Loading required package: parallel
Loading required package: doParallel
Loading required package: foreach
Loading required package: iterators
Loading required package: clValid
Loading required package: tictoc
Loading required package: anticlust
Loading required package: scclust
Loading required package: distances
Loading required package: ggpubr
Loading required package: rstatix

Attaching package: ‘rstatix’

The following object is masked from ‘package:stats’:

    filter

Loading required package: TMixClust
Loading required package: Mfuzz
Loading required package: Biobase
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: e1071

Attaching package: ‘DynDoc’

The following object is masked from ‘package:BiocGenerics’:

    path

Loading required package: amap
Loading required package: doSNOW
Loading required package: snow

Attaching package: ‘snow’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster

Loading required package: miscTools

Attaching package: ‘miscTools’

The following object is masked from ‘package:Biobase’:

    rowMedians

Loading required package: fields
Loading required package: spam
Loading required package: dotCall64
Loading required package: grid
Spam version 2.7-0 (2021-06-25) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridis
Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: Rmisc
Loading required package: lattice
Loading required package: plyr

Attaching package: ‘plyr’

The following objects are masked from ‘package:rstatix’:

    desc, mutate

The following object is masked from ‘package:ggpubr’:

    mutate

[1] "Starting algorithm:"
[1] "moc.gapbk"
[1] "Starting dataset:"
[1] "arabidopsis"
[1] "Starting moc.gapbk in arabidopsis run: 24"
[1] "Pareto solutions:"
    V1  V2  V3  V4 V5        f1        f2 rnkIndex    density
1   10 105  78 100 63  5.906181 25.663053        1        Inf
2  127   7  36  46 68 10.951287  4.439734        1        Inf
3   10 105  78 100 58  5.971576  9.050152        1 0.89761921
10 127   7  78  46 56  7.879017  4.662404        1 0.65429260
7   34 105  78 100 56  7.139563  5.416062        1 0.24846382
5   10 105 100  26 56  6.818647  6.214386        1 0.24335633
4   10 105 100  78 26  6.239914  6.796322        1 0.19962436
9   34 105  78  46 56  7.871082  5.368450        1 0.18207945
8   10 105 100  78 32  6.153280  7.652068        1 0.08304678
6   10 105  78 100 32  6.153280  7.652068        1 0.07633690
[1] "Starting moc.gapbk in arabidopsis run: 25"
[1] "Pareto solutions:"
   V1 V2  V3 V4  V5       f1        f2 rnkIndex   density
1  68 46 127 34   9 6.526458  4.439734        1       Inf
2  88 20   4 38 132 5.312387 14.317300        1       Inf
9   4 20  88 38 132 5.312387 14.317300        1       Inf
5  20 46  72 36 124 6.430760  6.180164        1 1.2084051
8  20  4  88 42 124 5.434937  7.495329        1 0.9876706
10 88 20   4 38 123 5.335859  9.149196        1 0.6048249
6  20 88   4 42 124 5.434937  7.495329        1 0.2147552
4  20  4  88 38 123 5.335859  9.149196        1 0.1867700
3  20  4  88 38 132 5.312387 14.317300        1 0.0000000
7  20 88   4 38 123 5.335859  9.149196        1 0.0000000
[1] "Starting dataset:"
[1] "cell_cycle"
[1] "Starting moc.gapbk in cell_cycle run: 24"
[1] "Pareto solutions:"
    V1  V2  V3  V4  V5        f1       f2 rnkIndex    density
1  155 383 364 227 342  3.756680 6.773753        1        Inf
2  345   8 367 262 335 17.322889 4.219120        1        Inf
6    8 254 130 112 335  5.467815 4.724653        1 1.08016915
3  345 130 367 262 335 17.071379 4.303925        1 0.61531506
4    8 130 367 262 335  9.520028 4.321679        1 0.60657845
5  249 367 130 112 335  7.257213 4.456285        1 0.22865809
7  249 367 169   8 335  9.127656 4.441581        1 0.17648932
9  345 130 262   8 342  6.218571 4.477913        1 0.17314639
10 169   8 367 186 335  9.320695 4.393990        1 0.07585770
8    8 345 130 262 342  6.218571 4.477913        1 0.06380628
[1] "Starting moc.gapbk in cell_cycle run: 25"
[1] "Pareto solutions:"
   V1  V2  V3  V4  V5        f1       f2 rnkIndex   density
1 362 272 104 259 237 18.825741 4.460037        1       Inf
2 327 272   5 127  21  4.278916 5.959435        1       Inf
4 362 272 104 259  21 13.837086 4.772236        1 0.8892134
7 362 272   5 127  21  5.489087 5.493066        1 0.5832427
3 362 272  77 194  91  8.737123 4.885670        1 0.5654069
5 362  62 104 373  32 18.399652 4.548339        1 0.5511539
9  96 272   5 127  21  6.224920 5.285505        1 0.3344359
6  96  62   5  19 347  6.975068 5.144779        1 0.3001964
8 327 272 104 127  21  8.014616 5.019862        1 0.2939389
[1] "Starting dataset:"
[1] "serum"
[1] "Starting moc.gapbk in serum run: 24"
[1] "Pareto solutions:"
   V1  V2  V3  V4  V5       f1       f2 rnkIndex   density
1 404 287 347 185 385 8.897201 4.574591        1       Inf
2  89 360 301 292 249 5.167609 6.238020        1       Inf
6  89 360 258 292 249 5.225620 4.610043        1 1.0242511
3  89 357 258 292 249 5.319460 4.601978        1 0.8332860
4 404 321 198 499 249 8.309028 4.599157        1 0.8228190
5 404 321 198 485 249 8.331539 4.576689        1 0.1724727
[1] "Starting moc.gapbk in serum run: 25"
[1] "Pareto solutions:"
   V1  V2  V3  V4  V5       f1       f2 rnkIndex   density
1 385 293 443 263 185 8.409477 4.574591        1       Inf
2 386 293 483  43 302 4.874627 9.952692        1       Inf
5 386 293 492  43 302 5.126836 8.145132        1 1.2499909
6 385 293 198 247 302 5.813018 4.657832        1 1.0714176
4 385 263 443 485 106 7.199705 4.576689        1 0.5211367
3 385 263 293 126 106 6.606437 4.634080        1 0.4073777
[1] "Starting dataset:"
[1] "sporulation"
[1] "Starting moc.gapbk in sporulation run: 24"
