Loading required package: nsga2R
Loading required package: mco

Attaching package: ‘mco’

The following object is masked _by_ ‘.GlobalEnv’:

    nsga2

Loading required package: cluster
Loading required package: factoextra
Loading required package: ggplot2
Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa
Loading required package: NbClust
Loading required package: infotheo
Loading required package: irace
Loading required package: parallel
Loading required package: doParallel
Loading required package: foreach
Loading required package: iterators
Loading required package: clValid
Loading required package: tictoc
Loading required package: anticlust
Loading required package: scclust
Loading required package: distances
Loading required package: ggpubr
Loading required package: rstatix

Attaching package: ‘rstatix’

The following object is masked from ‘package:stats’:

    filter

Loading required package: TMixClust
Loading required package: Mfuzz
Loading required package: Biobase
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: e1071

Attaching package: ‘DynDoc’

The following object is masked from ‘package:BiocGenerics’:

    path

Loading required package: amap
Loading required package: doSNOW
Loading required package: snow

Attaching package: ‘snow’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster

Loading required package: miscTools

Attaching package: ‘miscTools’

The following object is masked from ‘package:Biobase’:

    rowMedians

Loading required package: fields
Loading required package: spam
Loading required package: dotCall64
Loading required package: grid
Spam version 2.7-0 (2021-06-25) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridis
Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: Rmisc
Loading required package: lattice
Loading required package: plyr

Attaching package: ‘plyr’

The following objects are masked from ‘package:rstatix’:

    desc, mutate

The following object is masked from ‘package:ggpubr’:

    mutate

[1] "Starting algorithm:"
[1] "moc.gapbk"
[1] "Starting dataset:"
[1] "arabidopsis"
[1] "Starting moc.gapbk in arabidopsis run: 22"
[1] "Pareto solutions:"
   V1  V2 V3 V4 V5       f1       f2 rnkIndex   density
4 128  25 78 46 15 8.305681 4.467427        1       Inf
2  97 110 78  1 10 6.077473      Inf        1       Inf
3  25 128 78 46 56 7.325841 4.662404        1 0.4514594
5  97 110 78 29 10 7.299735 8.016825        1       NaN
[1] "Starting moc.gapbk in arabidopsis run: 23"
[1] "Pareto solutions:"
    V1  V2  V3  V4  V5        f1        f2 rnkIndex   density
1  121  36 125 109   1 18.727471  4.284771        1       Inf
2   34  41  71  46 109  5.764900 14.405825        1       Inf
3   34  41  71 109  46  5.764900 14.405825        1       Inf
4   34  41  76 109  46  5.996440  4.468561        1 1.1388155
5   34  41  46 109  73  5.830527 13.764340        1 0.9997030
9  121  36  76 109   1 13.661285  4.391571        1 0.3932108
7  121  36  76  57 109 11.707832  4.415648        1 0.3913564
10  34  46 123  78   9  8.661748  4.448918        1 0.2369315
8   34 123  46  78   9  8.661748  4.448918        1 0.2089029
6  121  36  76   1 109 13.661285  4.391571        1 0.1612518
[1] "Starting dataset:"
[1] "cell_cycle"
[1] "Starting moc.gapbk in cell_cycle run: 22"
[1] "Pareto solutions:"
    V1  V2  V3  V4  V5         f1       f2 rnkIndex    density
1  288 270 314  30 286 123.946452 4.431471        1        Inf
2   67  42 327 274 342   4.551057 7.182566        1        Inf
3  254 270 290  30 128  36.176013 4.438577        1 0.88693064
8  254   8  92 274 378   5.138528 6.664140        1 0.78825818
5  254   8  92 191 342   5.876525 5.044534        1 0.67515320
7  288   8 103  30 128  18.097054 4.597340        1 0.21477854
10 254 330  92 191 116  14.010082 4.962724        1 0.18464596
4  288 270  63  30 128  23.591672 4.559139        1 0.16139605
6  254   8  92 191 116  13.368728 4.996369        1 0.09786042
9  288 270  92  30 128  23.586010 4.592495        1 0.05990643
[1] "Starting moc.gapbk in cell_cycle run: 23"
[1] "Pareto solutions:"
    V1  V2  V3  V4  V5        f1        f2 rnkIndex    density
10 159 201 250  17 304 99.209701  4.135899        1        Inf
2  159  18 372 199  85  3.620142       Inf        1        Inf
3  159 250  26 104  24 15.661124  4.191351        1 0.89636025
4  159 366 201 104  85  8.083067  4.251703        1 0.07343331
5  159  26 201 104  24 13.527020  4.232870        1 0.05695134
7  159 312 201 104  85  6.507562  4.525099        1 0.02682859
6  159 201  26 104  24 13.527020  4.232870        1 0.02232571
8  159 312  33 199  85  5.518534  8.378700        1 0.01629692
9  159  18  33 199  85  4.949746 11.702086        1        NaN
[1] "Starting dataset:"
[1] "serum"
[1] "Starting moc.gapbk in serum run: 22"
[1] "Pareto solutions:"
    V1  V2  V3  V4  V5       f1        f2 rnkIndex   density
1  292 263 251 358 185 7.109678  4.574591        1       Inf
2  304 256 251 483 100 4.906347 12.925478        1       Inf
5  395 251 256 358  12 5.842280  4.686375        1 0.9339661
3  336 256 251 483 100 4.954757  8.686805        1 0.6288629
4  395 251 256 349  12 5.239032  5.284064        1 0.4638077
6  297 256 251 358 100 5.214800  6.181358        1 0.2135730
8  336 251 256 349  12 5.102379  7.016199        1 0.1846374
9  297 256 251 483  12 5.010254  7.742381        1 0.1677311
10 336 256 251 358 100 5.202041  6.927391        1 0.1509935
7  336 256 251 483  12 4.958060  7.869917        1 0.1382806
[1] "Starting moc.gapbk in serum run: 23"
[1] "Pareto solutions:"
    V1  V2  V3  V4  V5        f1       f2 rnkIndex   density
1  243 307 451 485 385 10.552031 4.576689        1       Inf
4  222 341 295 302 410  4.695902 6.065596        1       Inf
41 222 341 350 302 410  4.998375 4.738996        1 1.3801668
10 370   1 263 302 385  7.440240 4.708397        1 0.7105457
8  222 496 263 302 385  8.594123 4.595270        1 0.4871340
2  287 307 347 129 385  9.822341 4.588744        1 0.3468147
[1] "Starting dataset:"
[1] "sporulation"
[1] "Starting moc.gapbk in sporulation run: 22"
[1] "Pareto solutions:"
   V1  V2  V3  V4 V5       f1       f2 rnkIndex   density
1 414  26 390 307 44 9.489178 4.565015        1       Inf
2 143 225 376 320 73 5.087186 8.334746        1       Inf
3 225 143 376 320 73 5.087186 8.334746        1       Inf
5  26 225 376 200 73 6.678387 4.820971        1 1.0517974
7 143 225 376 200 73 5.203211 6.378890        1 0.8539473
6 225 143 376 200 73 5.203211 6.378890        1 0.4396279
4 225  26 376 200 73 6.678387 4.820971        1 0.4030136
[1] "Starting moc.gapbk in sporulation run: 23"
