Loading required package: nsga2R
Loading required package: mco

Attaching package: ‘mco’

The following object is masked _by_ ‘.GlobalEnv’:

    nsga2

Loading required package: cluster
Loading required package: factoextra
Loading required package: ggplot2
Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa
Loading required package: NbClust
Loading required package: infotheo
Loading required package: irace
Loading required package: parallel
Loading required package: doParallel
Loading required package: foreach
Loading required package: iterators
Loading required package: clValid
Loading required package: tictoc
Loading required package: anticlust
Loading required package: scclust
Loading required package: distances
Loading required package: ggpubr
Loading required package: rstatix

Attaching package: ‘rstatix’

The following object is masked from ‘package:stats’:

    filter

Loading required package: TMixClust
Loading required package: Mfuzz
Loading required package: Biobase
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: e1071

Attaching package: ‘DynDoc’

The following object is masked from ‘package:BiocGenerics’:

    path

Loading required package: amap
Loading required package: doSNOW
Loading required package: snow

Attaching package: ‘snow’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster

Loading required package: miscTools

Attaching package: ‘miscTools’

The following object is masked from ‘package:Biobase’:

    rowMedians

Loading required package: fields
Loading required package: spam
Loading required package: dotCall64
Loading required package: grid
Spam version 2.7-0 (2021-06-25) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridis
Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: Rmisc
Loading required package: lattice
Loading required package: plyr

Attaching package: ‘plyr’

The following objects are masked from ‘package:rstatix’:

    desc, mutate

The following object is masked from ‘package:ggpubr’:

    mutate

[1] "Starting algorithm:"
[1] "moc.gapbk"
[1] "Starting dataset:"
[1] "arabidopsis"
[1] "Starting moc.gapbk in arabidopsis run: 16"
[1] "Pareto solutions:"
    V1  V2  V3 V4  V5        f1        f2 rnkIndex   density
4   34   1 109 86 121 15.046045  4.391571        1       Inf
10   4  87  30 15  29  6.048404 10.434814        1       Inf
101  4  80  30 15  29  6.119009  6.943950        1 0.9158437
9    7 115  30 86  29  7.219823  5.686929        1 0.5221654
5   34  46 115 86 128 11.273331  4.585659        1 0.4566239
41  34  46 109 86 121 13.464194  4.483612        1 0.3728322
8   34 109  46 92 129  8.280246  5.239967        1 0.3368090
6   34  46 115 86 121  9.541707  4.608573        1 0.2959305
7   34 102 115 86 121  9.503657  5.185442        1 0.2446783
3   19  46  68 45 128 14.410677  4.439734        1 0.1910377
[1] "Starting moc.gapbk in arabidopsis run: 17"
[1] "Pareto solutions:"
    V1 V2 V3  V4  V5        f1       f2 rnkIndex   density
7   64 14 13 102  77  5.839031 7.990516        1       Inf
1   25 68 44  36  96 42.497821 4.439734        1       Inf
5   19 40 76 128  96 11.153995 4.454809        1 1.2173951
6  115 65 13  23 102 10.879871 5.699914        1 0.5153976
3   61 14 83   2 131  6.026759 7.599515        1 0.3266019
71  61 14 13 102  77  6.429323 6.888000        1 0.2420612
8   23 14 13  89 131  6.617022 6.463828        1 0.2182410
11  23 14 13 132  85  7.525821 5.933448        1 0.2070649
9   23 40 89 102  13  6.668552 6.027247        1 0.1741606
10  19 40 89 102  13  6.554795 6.791154        1 0.1245789
[1] "Starting dataset:"
[1] "cell_cycle"
[1] "Starting moc.gapbk in cell_cycle run: 16"
[1] "Pareto solutions:"
   V1  V2  V3  V4  V5        f1       f2 rnkIndex   density
1 312 191 368 151   7  4.247541 7.668616        1       Inf
2  31 202 349 231 270 20.239270 4.379972        1       Inf
4 312 360 349 231 307  6.315506 4.620565        1 1.5001865
3 312 202 131 231 307 12.889243 4.512173        1 0.5159272
5  31 202 131 231 270 18.671792 4.468045        1 0.4279167
6 312 202 349 231 307 13.867105 4.476824        1 0.3750147
[1] "Starting moc.gapbk in cell_cycle run: 17"
[1] "Pareto solutions:"
    V1  V2  V3  V4  V5        f1       f2 rnkIndex   density
1  205 351  90 130  19  3.975906 7.165813        1       Inf
2  345 176 335 104 313 16.554956 4.171632        1       Inf
3  205 351 130  90  19  3.975906 7.165813        1       Inf
5  279 351  90 130 114  5.641466 6.015462        1 0.8894169
6  345 176 148 130 313  7.862953 4.470108        1 0.7704217
4  293 176 335 104 313 11.706265 4.267577        1 0.5394003
9  279 351 130  90  19  4.012287 6.216613        1 0.5166030
8  345 176 130  95 313  8.234014 4.325782        1 0.2512757
7  345 176 130   8 313 10.400663 4.321792        1 0.1903496
10 345 176   8 130 313 10.400663 4.321792        1 0.1051242
[1] "Starting dataset:"
[1] "serum"
[1] "Starting moc.gapbk in serum run: 16"
[1] "Pareto solutions:"
   V1  V2  V3  V4  V5       f1        f2 rnkIndex   density
1 251 347 316 245 342 5.444123 10.839799        1       Inf
3   4 185 292 249 341 9.593701  4.574591        1       Inf
8 251 413 292 212 344 6.986226  4.591186        1 0.9119865
4 251 348 316 245 341 5.683553  7.383256        1 0.7098939
5 251 366 317 245 341 5.815287  4.653989        1 0.4786091
6 251 348 395 245 342 5.547832  8.697806        1 0.4674302
9 251 366 317 483 154 5.831143  4.607508        1 0.2922066
7 251 348 316 245 342 5.510047 10.049837        1 0.2570403
2 251 476 316 245 342 5.481528 10.208109        1 0.1419742
[1] "Starting moc.gapbk in serum run: 17"
